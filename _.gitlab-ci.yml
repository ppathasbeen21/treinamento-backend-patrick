#https://www.talvbansal.me/blog/in-depth-gitlab-ci-cd-with-laravel-apps/
#https://github.com/Geovica/Laravel-Gitlab-CI-CD-setup/blob/master/.gitlab-ci.yml

image: edbizarro/gitlab-ci-pipeline-php:8.0

stages:
  - preparation
  - optimization
  - syntax
  - testing
  - deploy

.init_ssh: &init_ssh |
  eval $(ssh-agent -s)
  echo "$SSH_PRIVATE_KEY" | tr -d '\r' | ssh-add - > /dev/null
  mkdir -p ~/.ssh
  chmod 700 ~/.ssh
  git config --global user.email "wall-e@fmd.ag"
  git config --global user.name "Waste Allocation Load Lifter Earth-Class"
  [[ -f /.dockerenv ]] && echo -e "Host *\n\tStrictHostKeyChecking no\n\n" > ~/.ssh/config

cache:
  key: "$CI_JOB_NAME-$CI_COMMIT_REF_SLUG"

composer:
  stage: preparation
  only:
    refs:
      - develop
    changes:
      - composer.lock
      - "**/*.php"
  script:
    - composer install --prefer-dist --no-ansi --no-interaction --no-progress --no-scripts --no-suggest
    - cp .env.ci-cd .env
    - php artisan key:generate
  artifacts:
    paths:
      - vendor/
      - .env
    expire_in: 1 day
    when: always
  cache:
    paths:
      - vendor/

npm:
  stage: preparation
  only:
    refs:
      - develop
    changes:
      - package-lock.json
      - resources/**/*
  before_script:
    - sudo apt-get update
    - sudo apt-get install -y bzip2
  script:
    - npm install
  artifacts:
    paths:
      - node_modules/
    expire_in: 1 day
    when: always
  cache:
    paths:
      - node_modules/

#npm-run-prod:
#  stage: optimization
#  only:
#    refs:
#      - develop
#    changes:
#      - package-lock.json
#      - resources/**/*
#  dependencies:
#    - composer
#    - npm
#  before_script:
#    - sudo apt-get update
#    - sudo apt-get install -y gconf-service libasound2 libatk1.0-0 libc6 libcairo2
#      libcups2 libdbus-1-3 libexpat1 libfontconfig1 libgcc1 libgconf-2-4 libgdk-pixbuf2.0-0
#      libglib2.0-0 libgtk-3-0 libnspr4 libpango-1.0-0 libpangocairo-1.0-0 libstdc++6 libx11-6
#      libx11-xcb1 libxcb1 libxcomposite1 libxcursor1 libxdamage1 libxext6 libxfixes3 libxi6
#      libxrandr2 libxrender1 libxss1 libxtst6 ca-certificates fonts-liberation libappindicator1
#      libnss3 lsb-release xdg-utils wget
#  script:
#    - php artisan serve &
#    - sleep 5
#    - npm run prod
#  artifacts:
#    paths:
#      - public/css/
#      - public/js/
#      - public/mix-manifest.json
#    expire_in: 1 day
#    when: always

php-cs-fixer:
  stage: syntax
  only:
    refs:
      - develop
    changes:
      - composer.lock
      - "**/*.php"
  script:
    - ./vendor/bin/php-cs-fixer fix --config=.php_cs.php --verbose --diff
  artifacts:
    paths:
      - packages/
    expire_in: 1 day
    when: always

phpstan:
  stage: testing
  only:
    refs:
      - develop
    changes:
      - composer.lock
      - "**/*.php"
  script:
    - ./vendor/bin/phpstan analyse --memory-limit=2G
    - touch database/database.sqlite

wall-e:
  stage: deploy
  only:
    refs:
      - develop
    changes:
      - composer.lock
      - "**/*.php"
      - package-lock.json
      - resources/**/*
  variables:
    HOST_INTERNO: "$HOST_INTERNO"
    HOST_PLESK: "$HOST_PLESK"
    SLACK_BOT: "$SLACK_BOT"
  script:
    - *init_ssh
    - git add .
    - git commit -m "feat(wall-e) commita o nrp e/ou php-cs-fix $CI_COMMIT_SHORT_SHA [skip ci]" || echo "Nenhuma alteração!"
    - git remote rm origin && git remote add origin git@gitlab.com:$CI_PROJECT_PATH.git
    - git push origin HEAD:$CI_COMMIT_REF_NAME
#    - ./vendor/bin/envoy run deploy

#wall-e-prod:
#  stage: deploy
#  only:
#    - master
#  variables:
#    HOST_INTERNO: "$HOST_INTERNO"
#    HOST_PLESK: "$HOST_PLESK"
#    SLACK_BOT: "$SLACK_BOT"
#  script:
#    - *init_ssh
#    - git remote rm origin && git remote add origin git@gitlab.com:$CI_PROJECT_PATH.git
#    - git branch develop
#    - git pull origin develop
#    - git merge --no-ff develop
#    - git push origin HEAD:$CI_COMMIT_REF_NAME
#    - ./vendor/bin/envoy run deploy --branch=master
#  when: delayed
#  start_in: 10 minutes
